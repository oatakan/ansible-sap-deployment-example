---

- name: preconfigure all nodes
  hosts: "tag_app_sap_hana_ha_demo:!tag_role_sapgui"

  pre_tasks:
    # existence of tuned package causes yum conflict in the next step, remove for idempotency
    - name: ensure tuned package is not installed
      package:
        name: tuned
        state: absent

  roles:
    - storage
    - common
    - sap-preconfigure
    - redhat_sap.sap_rhsm
    - redhat_sap.sap_hostagent

- name: preconfigure hana and deploy hana
  hosts: "tag_app_sap_hana_ha_demo:&tag_role_hana"
  become_method: su

  tasks:
    # this a temporary measure before implementing real vip
    - block:
        - name: set primary hana server ip
          add_host:
            name: hana_primary
            ip_address: "{{ ansible_ip_addresses[0] | default(ec2_private_ip_address) | default(ansible_host) | default(ansible_ssh_host) }}"

        - debug:
            var: hostvars['hana_primary']['ip_address']
      when: sap_hana_hsr_role == 'primary'

    - name: check existing hana installation
      stat:
        path: "/usr/sap/{{ sap_hana_deployment_hana_sid }}/HDB{{ sap_hana_deployment_hana_instance_number }}/exe/hdbsql"
        get_checksum: no
      register: hana_installation_check

    - include_role:
        name: "{{ role_name }}"
      when: (not hana_installation_check.stat.exists) | default(True)
#      vars:
#        # this a temporary measure before implementing real vip
#        sap_hana_vip: "{{ hostvars['hana_primary']['ip_address'] }}"
      loop_control:
        loop_var: role_name
      loop:
        - sap-hana-preconfigure
        - redhat_sap.sap_hana_deployment
        - redhat_sap.sap_hana_hsr

#    - block:
#        - name: prevent transaction log to fill up disk
#          shell: >
#            /usr/sap/{{ sap_hana_deployment_hana_sid }}/HDB{{ sap_hana_deployment_hana_instance_number }}/exe/hdbsql
#            -n {{ ansible_hostname }} -i {{ sap_hana_deployment_hana_instance_number }}
#            -u SYSTEM -p {{ sap_hana_deployment_hana_db_system_password }}
#            "ALTER SYSTEM ALTER CONFIGURATION ('global.ini', 'SYSTEM') SET ('persistence', 'log_mode') = 'overwrite' WITH RECONFIGURE";
#          become: yes
#          become_user: "{{ sap_hana_deployment_hana_sid | lower }}adm"
#          become_method: su
#          register: db_overwrite_cmd
#          failed_when: false
#
#        - debug:
#            msg: "{{ db_overwrite_cmd }}"
#      when: sap_hana_hsr_role == 'primary'

- name: preconfigure netweaver and install s4 app
  hosts: "tag_app_sap_hana_ha_demo:&tag_role_s4app"
#  become_method: su
  vars:
    # this a temporary measure before implementing real vip
    sap_hana_vip: "{{ hostvars['hana_primary']['ip_address'] }}"

  tasks:
    - name: check existing s4hana installation
      stat:
        path: "/usr/sap/{{ sap_s4hana_deployment_sid }}/D{{ sap_s4hana_deployment_hana_instance_nr }}/exe/SAPCAR"
        get_checksum: no
      register: s4hana_installation_check

    - include_role:
        name: "{{ role_name }}"
      when: (not s4hana_installation_check.stat.exists) | default(True)
      loop_control:
        loop_var: role_name
      loop:
        - sap-netweaver-preconfigure
        - s4-hosts
        - sap_s4hana_deployment

    - name: update hdbuserstore default entry on s4app
      shell: >
        source /home/{{ sap_s4hana_deployment_sid | lower }}adm/.sapenv.sh &&
        hdbuserstore Set default "{{ sap_db_host }}:3{{ sap_s4hana_deployment_hana_instance_nr }}13"@{{ sap_s4hana_deployment_sid }} {{ sap_s4hana_deployment_db_schema_abap }} {{ sap_s4hana_deployment_db_schema_abap_password }}
      become: yes
      become_user: "{{ sap_s4hana_deployment_sid | lower }}adm"
      become_method: su

- name: hana pacemaker
  hosts: "tag_app_sap_hana_ha_demo:&tag_role_hana"
  become_method: su
#  vars:
#    # this a temporary measure before implementing real vip
#    sap_hana_ha_pacemaker_vip: "{{ hostvars['hana_primary']['ip_address'] }}"

  tasks:
    - name: check pcs cluster
      shell: pcs status | grep hana_cluster
      register: check_pcs_cluster
      failed_when: false

    - include_role:
        name: redhat_sap.sap_hana_ha_pacemaker
      when: (check_pcs_cluster.rc != 0) | default(True)

  post_tasks:
    - block:
        - name: set to normal mode
          shell: >
            source /usr/sap/RHE/home/.sapenv.sh &&
            /usr/sap/{{ sap_hana_deployment_hana_sid }}/HDB{{ sap_hana_deployment_hana_instance_number }}/exe/hdbsql
            -n {{ ansible_hostname }} -i {{ sap_hana_deployment_hana_instance_number }}
            -u SYSTEM -p {{ sap_hana_deployment_hana_db_system_password }}
            "ALTER SYSTEM ALTER CONFIGURATION ('global.ini', 'SYSTEM') SET ('persistence', 'normal') = 'overwrite' WITH RECONFIGURE";
          become: yes
          become_user: "{{ sap_hana_deployment_hana_sid | lower }}adm"
          become_method: su
          register: db_overwrite_cmd
          failed_when: false

        - debug:
            msg: "{{ db_overwrite_cmd }}"

        - name: ensure backup exists
          shell: >
            source /usr/sap/RHE/home/.sapenv.sh &&
            /usr/sap/{{ sap_hana_deployment_hana_sid }}/HDB{{ sap_hana_deployment_hana_instance_number }}/exe/hdbsql
            -i {{ sap_hana_deployment_hana_instance_number }}
            -u SYSTEM -p {{ sap_hana_deployment_hana_db_system_password }}
            -d SYSTEMDB
            "BACKUP DATA FOR {{ sap_hana_deployment_hana_sid }} USING FILE ('data_bck')"
          become: yes
          become_user: "{{ sap_hana_deployment_hana_sid | lower }}adm"
          become_method: su
          register: db_overwrite_cmd
          failed_when: false
      when: sap_hana_hsr_role == 'primary'

- name: run insights client
  hosts: "tag_app_sap_hana_ha_demo:!tag_role_sapgui"

  tasks:
    - name: run insights client
      command: insights-client
      failed_when: false